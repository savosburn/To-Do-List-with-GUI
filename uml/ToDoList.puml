@startuml
'https://plantuml.com/sequence-diagram

class App {
    + main()
    + start()
}

class ToDoList {
    + isCompleted: BooleanProperty
    + taskTitle: String
    + taskDescription: dueDate

    + ToDoList(taskTitle, taskDescription, dueDate, isCompleted): initializes the variables in ToDoList
    + completedProperty(): returns if the property is completed (booleanProperty)
    + isCompleted(): returns if the property is completed (boolean)
    + setIsCompleted(value): sets if the task is completed
    + getTaskTitle(): gets the task title
    + setTaskTitle(taskTitle): sets the task title
    + getTaskDescription(): gets the task taskDescription
    + setTaskDescription(taskDescription): sets the task description
    + getDueDate(): gets the due date
    + setDueDate(dueDate): sets the due date
}

class ToDoListController {
    + helpButton: Button - FXML
    + fileMenuButton: MenuButton - FXML
    + saveItemsButton: MenuItem - FXML
    + loadItemsButton: MenuItem - FXML
    + sortMenuButton: MenuButton - FXML
    + viewAllTasksButton: MenuItem - FXML
    + viewCompleteTasksButton: MenuItem - FXML
    + viewIncompleteTasksButton: MenuItem - FXML
    + taskTable: TableView<ToDoList> - FXML
    + markCompletedColumn: TableColumn<ToDoList, Boolean> - FXML
    + taskTitleColumn: TableColumn<ToDoList, String> - FXML
    + descriptionColumn: TableColumn<ToDoList, String> - FXML
    + dueDateColumn: TableColumn<ToDoList, String> - FXML
    + addTaskButton: Button - FXML
    + deleteTaskButton: Button - FXML
    + taskTitleTextField: TextField - FXML
    + taskDescriptionTextField: TextField - FXML
    + dueDatePicker: DatePicker - FXML

    + fileChooser: FileChooser
    + toDoItems: ObservableList<ToDoList>
    + filteredList: ObservableList<ToDoList>

    + addTaskButtonPressed(): add new item to existing to do list
    + toInvalidDescriptionController(): Switches scene to InvalidDateController.fxml and returns a string
    + setToDoItems(ToDoList): Ensures that items are set properly
    + checkDescriptionLength(): Returns true if the description is between 1 and 256 characters
    + clearTextFields(): Clears all the fields in the GUI
    + catchNullPointerDueDate(): Returns the value of the date picker. Returns " " if the date picker was null
    + dueDatePicked(): Returns the chosen due date
    + toInvalidDateController(): Switches scene to InvalidDateController.fxml and returns a string
    + deleteTaskButtonPressed(): remove item from existing to do list
    + clearListButtonPressed(): ObservableList is cleared
    + helpButtonPressed(): Switches scene to the help controller
    + toHelpController(): Switches scene to the help controller
    + fileMenuButtonClicked(): Signifies that the file menu was opened
    + loadItemsButtonPressed(): Opens file chooser to load items
    + loadItems(File): Observable list is filled with info from .txt file
    + addToObservableList(ArrayList<String>): Populates array list with data from loaded file
    + parseStrings(String, ToDoList): Parses the items
    + saveItemsButtonPressed(): save all items in a single to do list to external storage
    + saveList(File): Writes the object ot the file
    + sortMenuButtonClicked(): Signifies that the sort menu was clicked
    + viewAllTasksButtonPressed()): display all existing items
    + filterList(): Creates a list with only items whose isCompleted box is checked true
    + isChecked(ToDoList): Returns state of check box
    + viewIncompleteTasksButtonPressed(): display only the incomplete items
    + viewCompleteTasksButtonPressed(): display completed items
    + filterIncompleteList(): Adds only incomplete items the filtered list
    + initialize(): GUI components initialized and table set
}

class HelpController {
    + returnButton: Button - FXML
    + nextButton: Button - FXML

    + nextButtonPressed(): Scene is switched to next help screen
    + returnButtonPressed(): Scene is switched back to ToDoListController
    + initialize(): Initializes GUI components
}

class HelpDeleteTasksController {
    + returnButton: Button - FXML
    + nextButton: Button - FXML
    + backButton: Button - FXML

    + backButtonPressed(): Scene is switched to previous help screen
    + nextButtonPressed(): Scene is switched to next help scene
    + returnButtonPressed(): Scene is switched back to ToDoListController
    + initialize(): GUI components initialized
}

class HelpModifyTasksController {
    + returnButton: Button - FXML
    + nextButton: Button - FXML
    + backButton: Button - FXML

    + backButtonPressed(): Scene is switched to previous help screen
    + nextButtonPressed(): Scene is switched to next help scene
    + returnButtonPressed(): Scene is switched back to ToDoListController
    + initialize(): GUI components initialized
}

class HelpSaveLoadTasksController {
    + returnButton: Button - FXML
    + nextButton: Button - FXML
    + backButton: Button - FXML

    + backButtonPressed(): Scene is switched to previous help screen
    + nextButtonPressed(): Scene is switched to next help scene
    + returnButtonPressed(): Scene is switched back to ToDoListController
    + initialize(): GUI components initialized
}

class HelpSortTasksController {
    + returnButton: Button - FXML
    + backButton: Button - FXML

    + backButtonPressed(): Scene is switched to previous help screen
    + returnButtonPressed(): Scene is switched back to ToDoListController
    + initialize(): GUI components initialized
}

class InvalidDateController {
    + okButton: Button - FXML

    + okButtonPressed(): Scene is switched to ToDoList controller
    + initialize(): GUI components initialized
}

class InvalidDescriptionLengthController {
    + okButton: Button - FXML

    + okButtonPressed(): Scene switches to ToDoList Controller
    + initialize(): GUI components initialized
}

javafx.Application <|- App
App *--> ToDoListController
ToDoListController -- HelpController
ToDoListController -- InvalidDateController
ToDoListController -- InvalidDescriptionLengthController
HelpController -- HelpDeleteTasksController
HelpDeleteTasksController -- HelpModifyTasksController
HelpModifyTasksController -- HelpSaveLoadTasksController
HelpSaveLoadTasksController -- HelpSortTasksController
HelpSortTasksController -- HelpController
App *--> ToDoList
ToDoList - ToDoListController
@enduml